import logging
import telebot
import os.path
import os
from flask import Flask, request


if "TOKEN" in list(os.environ.keys()):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –•–µ—Ä–æ–∫—É
    TOKEN = os.getenv("TOKEN")
    URL = os.getenv("URL")
else:
    TOKEN = "–í–ê–® –¢–û–ö–ï–ù"

bot = telebot.TeleBot(TOKEN)
logging.basicConfig(level=logging.DEBUG, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s")


@bot.message_handler(commands=["start"])
def start_bot(message):
    bot.send_message(message.chat.id, "Ok!", reply_to_message_id=message.message_id)


@bot.message_handler(content_types=["document"])
def start_doc(message):
    print(message)
    flag = True
    filedata = str(message.chat.id) + ".txt"
    try:
        if os.path.exists(filedata):
            with open(filedata, 'r', encoding="utf-8") as file:
                model_list = file.readlines()
        else:
            with open(filedata, 'w+', encoding="utf-8") as file:
                model_list = file.readlines()
    except:
        bot.send_message(message.chat.id, "üò§–ë–æ–ª—å—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞–µ—Ç–µ!", reply_to_message_id=message.message_id)


    for model in model_list:
        # –£–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        curModel = model.split(',')
        if curModel[1 ] == (message.document.file_name + '\n'):
            bot.delete_message(message.chat.id, message.message_id)
            # bot.send_message(message.chat.id, text="File with name *%s* was uploading early." % curModel[1], parse_mode="markdown")
            flag = False
            break

    if flag:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        model_list.append("{},{}\n".format(message.document.file_id, message.document.file_name))
        try:
            with open(filedata, 'w', encoding="utf-8") as file:
                file.writelines("%s" % line for line in model_list)
        except:
            bot.send_message(message.chat.id, "üò§–ë–æ–ª—å—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞–µ—Ç–µ!", reply_to_message_id=message.message_id)


        # bot.send_message(message.chat.id, text="File with name *{}* was adding.".format(message.document.file_name), parse_mode="markdown")


# –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –•–µ—Ä–æ–∫—É (–∫–∞–∫ –µ–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∏–∂–µ)
if "URL" in list(os.environ.keys()):
    logger = telebot.logger
    telebot.logger.setLevel(logging.INFO)
    server = Flask(__name__)
    @server.route("/bot", methods=['POST'])
    def getMessage():
        bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
        return "!", 200
    @server.route("/")
    def webhook():
        bot.remove_webhook()
        bot.set_webhook(url=URL)
        return "?", 200
    server.run(host="0.0.0.0", port=os.environ.get('PORT', 80))
else:
    # –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è HEROKU –Ω–µ—Ç—É, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –∑–∞–ø—É—Å–∫ —Å –º–∞—à–∏–Ω—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª–ª–∏–Ω–≥–æ–º.
    bot.remove_webhook()
    bot.polling(none_stop=True)